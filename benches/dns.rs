use criterion::{black_box, criterion_group, criterion_main, Criterion};
use rsgateway::dns::{
    buffer::PacketBuffer,
    packet::Packet,
    resolver::{Resolver, DNS_IP_LOCAL},
};

pub fn criterion_benchmark(c: &mut Criterion) {
    c.bench_function("dns_parsing", |b| {
        let mut pb = PacketBuffer::default();
        let input: &[u8] = &[
            0x98, 0xf3, 0x81, 0x80, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 6, b'g', b'o',
            b'o', b'g', b'l', b'e', 3, b'c', b'o', b'm', 0x00, 0, 2, 0x00, 0x01, 0xc0, 0x0c, 0x00,
            0x02, 0x00, 0x01, 0x00, 0x00, 0x21, 0x25, 0x00, 0x06, 3, b'n', b's', b'2', 0xc0, 0x0c,
            0xc0, 0x0c, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x21, 0x25, 0x00, 0x06, 0x03, b'n',
            b's', b'4', 0xc0, 0x0c, 0xc0, 0x0c, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x21, 0x25,
            0x00, 0x06, 0x03, b'n', b's', b'1', 0xc0, 0x0c, 0xc0, 0x0c, 0x00, 0x02, 0x00, 0x01,
            0x00, 0x00, 0x21, 0x25, 0x00, 0x06, 0x03, b'n', b's', b'2', 0xc0, 0x0c,
        ];
        pb.buf[0..input.len()].copy_from_slice(input);

        b.iter(|| {
            let _ = black_box(Packet::try_from(&mut pb));
        });
    });

    c.bench_function("dns_lookup", |b| {
        b.iter(|| {
            let resolver = Resolver::new();
            let _ = black_box(resolver.lookup_a("google.com", DNS_IP_LOCAL));
        })
    });
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);
